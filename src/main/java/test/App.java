/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;
import static spark.Spark.get;
import static spark.Spark.post;
import static spark.Spark.port;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        
        //log
        Logger logger = LogManager.getLogger(App.class);
        logger.error("LOG MESSAGE");

        //Spark default olarak 4567.porttan çalışır. Heroku ise kendisi sanal makineden bir port seçecek. Bu yüzden port ayarlamamız gerekiyor.
        int port=Integer.parseInt(System.getenv("PORT"));
        port(port);
        logger.error("Current port number: "+port); 


        get("/", (req, res) -> "Hello, World");

        
        get("/compute",
            (rq, rs) -> {
                Map<String, String> map = new HashMap<String, String>();
                map.put("result", "not computed yet!");
                return new ModelAndView(map, "compute.mustache");
            },
            new MustacheTemplateEngine());

        post("/compute", (req, res) -> {
        //System.out.println(req.queryParams("input1"));
        //System.out.println(req.queryParams("input2"));
        String input1 = req.queryParams("input1");
        java.util.Scanner sc1 = new java.util.Scanner(input1);
        sc1.useDelimiter("[;\r\n]+");
        java.util.ArrayList<Integer> inputList = new java.util.ArrayList<>();
        while (sc1.hasNext())
        {
            int value = Integer.parseInt(sc1.next().replaceAll("\\s",""));
            inputList.add(value);
        }
        sc1.close();
        System.out.println(inputList);

        String input2 = req.queryParams("input2").replaceAll("\\s","");
        int input2AsInt = Integer.parseInt(input2);

        String input3 = req.queryParams("input3").replaceAll("\\s","");
        int input3AsInt = Integer.parseInt(input3);

        String input4 = req.queryParams("input4").replaceAll("\\s","");
        int input4AsInt = Integer.parseInt(input4);

        boolean result = App.isSumInArray(inputList, input2AsInt, input3AsInt, input4AsInt);
        Map<String, Boolean> map = new HashMap<String, Boolean>();
        map.put("result", result);
        return new ModelAndView(map, "compute.mustache");
        }, new MustacheTemplateEngine());

    }

    public static boolean isSumInArray(ArrayList<Integer> arr, int x, int y, int z) {
        //not negative nums
        if (arr == null || x < 0 || y < 0 || z < 0) return false;
        if (arr.size() <= 0) return false;
        int sum = x + y + z;
        
        //if (sum < 0) return false; //yukarda kontrol ettik 

        for (Integer value : arr) {
            if (value == sum) {
                return true;
            }
        }
        return false;
    }  
}   
